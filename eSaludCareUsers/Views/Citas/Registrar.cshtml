@{
    ViewBag.Title = "Registrar Cita Médica";
}

<main class="main">
    <section id="hero" class="hero section">
        <div class="container">
            <div class="row align-items-center">
                <form id="formCita" class="row g-3 bg-light p-4 rounded shadow-sm" autocomplete="off">
                    <h3 class="department-name mb-3">Agendar Cita</h3>

                    <!-- IdPaciente oculto -->
                    <input type="hidden" id="idPaciente" />

                    <div class="mb-3">
                        <label for="idMedico" class="form-label">Doctor:</label>
                        <select id="idMedico" name="IdMedico" class="form-select" required>
                            <option value="">-- Selecciona un médico --</option>
                        </select>
                    </div>

                    <div class="mb-3">
                        <label for="fecha" class="form-label">Fecha:</label>
                        <input type="date" id="fecha" name="Fecha" class="form-control"
                               required min="@DateTime.Now.ToString("yyyy-MM-dd")" />
                    </div>

                    <div class="mb-3">
                        <label for="hora" class="form-label">Hora:</label>
                        <select id="hora" name="Hora" class="form-select" required>
                            <option value="">-- Selecciona la hora --</option>
                        </select>
                    </div>

                    <div class="mb-3">
                        <label for="motivo" class="form-label">Motivo / Nota:</label>
                        <textarea id="motivo" name="Motivo" rows="2"
                                  class="form-control" placeholder="Escribe el motivo..." required></textarea>
                    </div>

                    <button type="submit" class="btn-getstarted">
                        + Agendar Cita
                    </button>

                    <div id="mensaje" class="mt-3 text-center fw-bold"></div>
                </form>
            </div>
        </div>
    </section>
</main>

@section Scripts {
    <script>
        // Función para leer el payload del JWT
        function parseJwt(token) {
            if (!token) return null;
            const base64Url = token.split('.')[1];
            const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
            const jsonPayload = decodeURIComponent(atob(base64).split('').map(c =>
                '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)
            ).join(''));
            return JSON.parse(jsonPayload);
        }

        document.addEventListener("DOMContentLoaded", function () {
            const token = localStorage.getItem("token");
            if (!token) {
                alert("Debes iniciar sesión para agendar una cita.");
                window.location.href = "/Login/Index";
                return;
            }

            // 🔹 Obtener idUsuario del JWT
            const payload = parseJwt(token);
            const idUsuario = payload?.unique_name;

            // 🔹 Obtener idPaciente desde backend
            async function obtenerIdPaciente(idUsuario) {
                try {
                    const response = await fetch(`/api/v1/obtenerIdPaciente?idUsuario=${idUsuario}`, {
                        headers: { 'Authorization': `Bearer ${token}` }
                    });
                    const data = await response.json();
                    if (data.idPaciente) {  // 🔹 aquí ahora la respuesta tiene idPaciente directamente
                        document.getElementById("idPaciente").value = data.idPaciente;
                    } else {
                        alert("No se encontró el paciente asociado al usuario.");
                    }
                } catch (error) {
                    console.error("Error al obtener el ID del paciente:", error);
                }
            }

            obtenerIdPaciente(idUsuario);

            // 🔹 Cargar médicos
            async function cargarMedicos() {
                try {
                    const response = await fetch('@Url.Action("ObtenerMedicos", "Citas")', {
                        headers: { 'Authorization': `Bearer ${token}` }
                    });
                    const data = await response.json();
                    const select = document.getElementById('idMedico');
                    select.innerHTML = '<option value="">-- Selecciona un médico --</option>';

                    if (data.estado) {
                        data.elemento.forEach(medico => {
                            const option = document.createElement('option');
                            option.value = medico.IdMedico;
                            option.textContent = `${medico.Nombre} ${medico.Apellido} - ${medico.Especialidad}`;
                            select.appendChild(option);
                        });
                    }
                } catch (error) {
                    console.error('Error al cargar médicos:', error);
                }
            }

            cargarMedicos();

            // 🔹 Cargar horas disponibles
            async function cargarHorasDisponibles() {
                const medicoId = document.getElementById('idMedico').value;
                const fecha = document.getElementById('fecha').value;
                if (!medicoId || !fecha) return;

                try {
                    const response = await fetch(`/api/v1/HorariosDisponibles?idMedico=${medicoId}&fecha=${fecha}`, {
                        headers: { 'Authorization': `Bearer ${token}` }
                    });
                    const data = await response.json();

                    const selectHora = document.getElementById('hora');
                    selectHora.innerHTML = '<option value="">-- Selecciona la hora --</option>';

                    if (data.estado && data.horarios.length > 0) {
                        data.horarios.forEach(h => {
                            const option = document.createElement('option');
                            option.value = h;
                            option.textContent = h;
                            selectHora.appendChild(option);
                        });
                    } else {
                        const option = document.createElement('option');
                        option.value = "";
                        option.textContent = "No hay horarios disponibles";
                        selectHora.appendChild(option);
                    }
                } catch (error) {
                    console.error('Error al cargar horarios:', error);
                }
            }

            document.getElementById('idMedico').addEventListener('change', cargarHorasDisponibles);
            document.getElementById('fecha').addEventListener('change', cargarHorasDisponibles);

            // 🔹 Registrar cita
            document.getElementById('formCita').addEventListener('submit', async (e) => {
                e.preventDefault();
                const msg = document.getElementById('mensaje');

                const cita = {
                    IdPaciente: parseInt(document.getElementById('idPaciente').value),
                    IdMedico: parseInt(document.getElementById('idMedico').value),
                    Fecha: document.getElementById('fecha').value,
                    Hora: document.getElementById('hora').value,
                    Motivo: document.getElementById('motivo').value
                };

                try {
                    const response = await fetch('/api/v1/registrarCita', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Authorization': `Bearer ${token}`
                        },
                        body: JSON.stringify(cita)
                    });

                    const data = await response.json();

                    if (response.ok) {
                        msg.style.color = 'green';
                        msg.innerText = data.mensaje || 'Cita registrada correctamente.';
                        document.getElementById('formCita').reset();
                        document.getElementById('hora').innerHTML = '<option value="">-- Selecciona la hora --</option>';
                    } else {
                        msg.style.color = 'red';
                        msg.innerText = data.message || data.mensaje || 'Error al registrar la cita.';
                    }
                } catch (error) {
                    msg.style.color = 'red';
                    msg.innerText = 'Error al conectar con el servidor.';
                    console.error(error);
                }
            });
        });
    </script>
}
